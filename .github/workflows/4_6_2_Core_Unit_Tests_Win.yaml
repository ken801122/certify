name: build and test .NET 4.6.2 Windows

on:
  push:
  pull_request:
    branches: [ release, development ]
    paths:
    - '**.cs'
    - '**.csproj'

env:
  DOTNET_VERSION: '8.0.100' # The .NET SDK version to use

jobs:
  build-and-test:
    # TODO: Re-enable once we determine the cause of the .NET Framework 4.6.2 tests stalling (test runner doesn't quit when done')
    if: ${{ ! always() }}
    name: build-and-test-windows
    runs-on: windows-latest
    steps:
    - name: Clone webprofusion/certify
      uses: actions/checkout@master
      with:
        path: ./certify

    - name: Clone webprofusion/anvil
      uses: actions/checkout@master
      with:
        repository: webprofusion/anvil
        ref: refs/heads/main
        path: ./libs/anvil

    - name: Clone webprofusion/certify-plugins (development branch push)
      if: ${{ github.event_name == 'push' && contains(github.ref_name, '_dev') }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: refs/heads/development    
        path: ./certify-plugins

    - name: Clone webprofusion/certify-plugins (release branch push)
      if: ${{ github.event_name == 'push' && contains(github.ref_name, '_rel') }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: refs/heads/release    
        path: ./certify-plugins

    - name: Clone webprofusion/certify-plugins (pull request)
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: ${{ github.base_ref }}    
        path: ./certify-plugins

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Step CLI
      run: "Invoke-WebRequest -Method 'GET' -uri 'https://dl.smallstep.com/gh-release/cli/docs-cli-install/v0.24.4/step_windows_0.24.4_amd64.zip' -Outfile 'C:\\temp\\step_windows_0.24.4_amd64.zip'; tar -oxzf C:\\temp\\step_windows_0.24.4_amd64.zip -C 'C:\\Program Files';"
      
    - name: Add Step CLI to PATH
      run: echo "C:\Program Files\step_0.24.4\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Pull step-ca Docker Image
      run: docker pull jrnelson90/step-ca-win

    - name: Install Test Report Tools
      run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.2.0 && dotnet tool install --global LiquidTestReports.Cli --version 1.4.3-beta

    - name: Install Dependencies & Build Certify.Core.Tests.Unit
      run: dotnet build -c Debug -f net462 --property WarningLevel=0 /clp:ErrorsOnly
      working-directory: ./certify/src/Certify.Tests/Certify.Core.Tests.Unit

    - name: Run Certify.Core.Tests.Unit Tests
      run: dotnet test Certify.Core.Tests.Unit.dll -v normal -f net462 --logger trx --logger html --collect:"XPlat Code Coverage" --results-directory "TestResults-4_6_2-${{ runner.os }}" /testadapterpath:C:\%HOMEPATH%\.nuget\packages\coverlet.collector\6.0.0\build\netstandard1.0
      working-directory: ./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462

    - name: Generated Test Results Report
      if: success() || failure()    # run this step even if previous step failed
      run: liquid --inputs "File=./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462/TestResults-4_6_2-${{ runner.os }}/*.trx;Format=Trx"" --output-file ./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462/TestResults-4_6_2-${{ runner.os }}/test_results.md --title "Test Results" && Get-Content -Path ./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462/TestResults-4_6_2-${{ runner.os }}/test_results.md | Out-File -FilePath $env:GITHUB_STEP_SUMMARY

    - name: Generated Test Coverage Report
      if: success() || failure()    # run this step even if previous step failed
      run: reportgenerator -reports:./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462/TestResults-4_6_2-${{ runner.os }}/**/coverage.cobertura.xml -targetdir:./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462/TestResults-4_6_2-${{ runner.os }} -reporttypes:MarkdownSummaryGithub "-title:Test Coverage" && Get-Content -Path ./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462/TestResults-4_6_2-${{ runner.os }}/SummaryGithub.md | Out-File -FilePath $env:GITHUB_STEP_SUMMARY

    # - name: Publish Test Results
    #   uses: EnricoMi/publish-unit-test-result-action/composite@v2
    #   if: always()
    #   with:
    #     files: ./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net462/TestResults-4_6_2-${{ runner.os }}/*.trx
