name: build and test .NET Core 8.0 Windows

on:
  push:
  pull_request:
    branches: [ release, development ]
    paths:
    - '**.cs'
    - '**.csproj'

env:
  DOTNET_VERSION: '8.0.100' # The .NET SDK version to use

jobs:
  build-and-test:

    name: build-and-test-windows
    runs-on: windows-latest
    steps:
    - name: Clone webprofusion/certify
      uses: actions/checkout@master
      with:
        path: ./certify

    - name: Clone webprofusion/anvil
      uses: actions/checkout@master
      with:
        repository: webprofusion/anvil
        ref: refs/heads/main
        path: ./libs/anvil

    - name: Clone webprofusion/certify-plugins (development branch push)
      if: ${{ github.event_name == 'push' && contains(github.ref_name, '_dev') }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: refs/heads/development    
        path: ./certify-plugins

    - name: Clone webprofusion/certify-plugins (release branch push)
      if: ${{ github.event_name == 'push' && contains(github.ref_name, '_rel') }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: refs/heads/release    
        path: ./certify-plugins

    - name: Clone webprofusion/certify-plugins (pull request)
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: ${{ github.base_ref }}    
        path: ./certify-plugins

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Step CLI
      run: |
        Invoke-WebRequest -Method 'GET' -uri 'https://dl.smallstep.com/gh-release/cli/docs-cli-install/v0.24.4/step_windows_0.24.4_amd64.zip' -Outfile 'C:\temp\step_windows_0.24.4_amd64.zip'
        tar -oxzf C:\temp\step_windows_0.24.4_amd64.zip -C "C:\Program Files"
        echo "C:\Program Files\step_0.24.4\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Pull step-ca Docker Image
      run: docker pull jrnelson90/step-ca-win

    - name: Install Dependencies & Build Certify.Core.Tests.Unit
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.2.0
        dotnet add package GitHubActionsTestLogger
        dotnet build -c Debug -f net8.0 --property WarningLevel=0 /clp:ErrorsOnly
      working-directory: ./certify/src/Certify.Tests/Certify.Core.Tests.Unit
    
    - name: Run Certify.Core.Tests.Unit Tests
      run: |
        # echo "D:\a\certify\certify\certify" | Out-File -FilePath $env:GITHUB_WORKSPACE -Encoding utf8
        $env:GITHUB_WORKSPACE="D:\a\certify\certify\certify"
        $env:GITHUB_STEP_SUMMARY="./TestResults-8_0-${{ runner.os }}/test-summary.md"
        # echo "# Test Results" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Encoding utf8
        dotnet test Certify.Core.Tests.Unit.dll -v normal -f net8.0 -l trx -l "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true;annotations.messageFormat=@error\n@trace" --collect:"XPlat Code Coverage" --results-directory "TestResults-8_0-${{ runner.os }}" /testadapterpath:C:\%HOMEPATH%\.nuget\packages\coverlet.collector\6.0.0\build\netstandard1.0 -- RunConfiguration.CollectSourceInformation=true
        Get-Content -Path ./TestResults-8_0-${{ runner.os }}/test-summary.md | Out-File -FilePath $env:GITHUB_STEP_SUMMARY
      working-directory: ./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net8.0

    - name: Generated Test Coverage Report
      run: |
        reportgenerator -reports:./TestResults-8_0-${{ runner.os }}/**/coverage.cobertura.xml -targetdir:./TestResults-8_0-${{ runner.os }} -reporttypes:MarkdownSummaryGithub "-title:Test Coverage"
        Get-Content -Path ./TestResults-8_0-${{ runner.os }}/SummaryGithub.md | Out-File -FilePath $env:GITHUB_STEP_SUMMARY
      working-directory: ./certify/src/Certify.Tests/Certify.Core.Tests.Unit/bin/Debug/net8.0
